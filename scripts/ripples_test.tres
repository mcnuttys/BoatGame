[gd_resource type="VisualShader" load_steps=31 format=3 uid="uid://ly17ksihtdxt"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_btppn"]
function = 31

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_plfbq"]
parameter_name = "deep_water"
default_value_enabled = true
default_value = Color(0, 0.270588, 1, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_us32l"]
parameter_name = "shallow_water"
default_value_enabled = true
default_value = Color(0.184314, 0.819608, 1, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_xbuxd"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_i8y8f"]
size = Vector2(460, 260)
expression = "vec3 duv = vec3(4.0 / 514.0, 4.0 / 514.0, 0);
float v1 = texture(sim, UV - duv.xz).y;
float v2 = texture(sim, UV + duv.xz).y;
float v3 = texture(sim, UV - duv.zy).y;
float v4 = texture(sim, UV + duv.zy).y;

normal = normalize(vec3(v1 - v2, v3 - v4, 0.3));"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_x3vys"]
parameter_name = "refraction_strength"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dmsls"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_cu6k4"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_toia7"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_rgxji"]
source = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_qvrge"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.8, 0.8, 0.8)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_r0ka2"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_7wdf5"]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_0vkwv"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4782i"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_dj173"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_3e3mw"]
default_input_values = [0, Vector3(0, 0, 1), 1, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_nxsyf"]
parameter_name = "Simulation"

[sub_resource type="VisualShaderNodeLinearSceneDepth" id="VisualShaderNodeLinearSceneDepth_8lfkg"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_3y27t"]
parameter_name = "murkiness"
default_value_enabled = true
default_value = 0.3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_b4ewp"]
size = Vector2(580, 280)
expression = "float d = linear_depth;
d = d + VERTEX.z;
depth = exp(-d * murkiness);"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xyr6k"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_26w6t"]
input_name = "uv"

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_3gxf2"]
parameter_name = "Simulation"
param_type = 9

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_etd0o"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_goeol"]
input_name = "normal"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_beq6k"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_817e6"]
parameter_name = "amplitude"
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_tqkaq"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4yqld"]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Simulation;
uniform float amplitude = 0.5;



void vertex() {
// Input:9
	vec3 n_out9p0 = VERTEX;


// Input:5
	vec3 n_out5p0 = NORMAL;


// Input:2
	vec2 n_out2p0 = UV;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Simulation, n_out2p0);


// FloatParameter:7
	float n_out7p0 = amplitude;


// FloatOp:6
	float n_out6p0 = n_out4p0.x * n_out7p0;


// VectorOp:8
	vec3 n_out8p0 = n_out5p0 * vec3(n_out6p0);


// VectorOp:10
	vec3 n_out10p0 = n_out9p0 + n_out8p0;


// Output:0
	VERTEX = n_out10p0;


}

void fragment() {
// ColorConstant:26
	vec4 n_out26p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// Input:21
	vec2 n_out21p0 = UV;


	vec4 n_out22p0;
// Texture2D:22
	n_out22p0 = texture(Simulation, n_out21p0);


// VectorDecompose:24
	float n_out24p0 = vec3(n_out22p0.xyz).x;
	float n_out24p1 = vec3(n_out22p0.xyz).y;
	float n_out24p2 = vec3(n_out22p0.xyz).z;


// VectorOp:25
	vec3 n_out25p0 = vec3(n_out26p0.xyz) * vec3(n_out24p0);


// VectorOp:27
	vec3 n_in27p0 = vec3(0.00000, 0.00000, 1.00000);
	vec3 n_out27p0 = n_in27p0 + n_out25p0;


// Output:0
	ALBEDO = n_out27p0;


}
"
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_26w6t")
nodes/vertex/2/position = Vector2(-800, 240)
nodes/vertex/3/node = SubResource("VisualShaderNodeParameterRef_3gxf2")
nodes/vertex/3/position = Vector2(-800, 320)
nodes/vertex/4/node = SubResource("VisualShaderNodeTexture_etd0o")
nodes/vertex/4/position = Vector2(-500, 240)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_goeol")
nodes/vertex/5/position = Vector2(-240, 240)
nodes/vertex/6/node = SubResource("VisualShaderNodeFloatOp_beq6k")
nodes/vertex/6/position = Vector2(-100, 340)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatParameter_817e6")
nodes/vertex/7/position = Vector2(-620, 480)
nodes/vertex/8/node = SubResource("VisualShaderNodeVectorOp_tqkaq")
nodes/vertex/8/position = Vector2(60, 240)
nodes/vertex/9/node = SubResource("VisualShaderNodeInput_4yqld")
nodes/vertex/9/position = Vector2(-80, 140)
nodes/vertex/10/node = SubResource("VisualShaderNodeVectorOp_xyr6k")
nodes/vertex/10/position = Vector2(240, 140)
nodes/vertex/connections = PackedInt32Array(2, 0, 4, 0, 3, 0, 4, 2, 7, 0, 6, 1, 4, 0, 6, 0, 6, 0, 8, 1, 5, 0, 8, 0, 9, 0, 10, 0, 8, 0, 10, 1, 10, 0, 0, 0)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_nxsyf")
nodes/fragment/3/position = Vector2(-1440, 140)
nodes/fragment/7/node = SubResource("VisualShaderNodeLinearSceneDepth_8lfkg")
nodes/fragment/7/position = Vector2(-1120, 1280)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_3y27t")
nodes/fragment/8/position = Vector2(-1120, 1080)
nodes/fragment/9/node = SubResource("VisualShaderNodeExpression_b4ewp")
nodes/fragment/9/position = Vector2(-860, 1080)
nodes/fragment/9/size = Vector2(580, 280)
nodes/fragment/9/input_ports = "0,0,murkiness;1,0,linear_depth;"
nodes/fragment/9/output_ports = "0,0,depth;"
nodes/fragment/9/expression = "float d = linear_depth;
d = d + VERTEX.z;
depth = exp(-d * murkiness);"
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatFunc_btppn")
nodes/fragment/10/position = Vector2(-220, 1100)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorParameter_plfbq")
nodes/fragment/11/position = Vector2(-620, 700)
nodes/fragment/12/node = SubResource("VisualShaderNodeColorParameter_us32l")
nodes/fragment/12/position = Vector2(-620, 880)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_xbuxd")
nodes/fragment/13/position = Vector2(-260, 780)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_i8y8f")
nodes/fragment/14/position = Vector2(-1080, 260)
nodes/fragment/14/size = Vector2(460, 260)
nodes/fragment/14/input_ports = "0,8,sim;"
nodes/fragment/14/output_ports = "0,4,normal;"
nodes/fragment/14/expression = "vec3 duv = vec3(4.0 / 514.0, 4.0 / 514.0, 0);
float v1 = texture(sim, UV - duv.xz).y;
float v2 = texture(sim, UV + duv.xz).y;
float v3 = texture(sim, UV - duv.zy).y;
float v4 = texture(sim, UV + duv.zy).y;

normal = normalize(vec3(v1 - v2, v3 - v4, 0.3));"
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_x3vys")
nodes/fragment/15/position = Vector2(-1440, -40)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_dmsls")
nodes/fragment/16/position = Vector2(-540, -20)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_cu6k4")
nodes/fragment/17/position = Vector2(-360, -40)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_toia7")
nodes/fragment/18/position = Vector2(-680, 140)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture_rgxji")
nodes/fragment/19/position = Vector2(-60, 0)
nodes/fragment/20/node = SubResource("VisualShaderNodeMix_qvrge")
nodes/fragment/20/position = Vector2(140, 60)
nodes/fragment/21/node = SubResource("VisualShaderNodeInput_r0ka2")
nodes/fragment/21/position = Vector2(-1440, -160)
nodes/fragment/22/node = SubResource("VisualShaderNodeTexture_7wdf5")
nodes/fragment/22/position = Vector2(-980, -220)
nodes/fragment/24/node = SubResource("VisualShaderNodeVectorDecompose_0vkwv")
nodes/fragment/24/position = Vector2(-800, -220)
nodes/fragment/25/node = SubResource("VisualShaderNodeVectorOp_4782i")
nodes/fragment/25/position = Vector2(-440, -280)
nodes/fragment/26/node = SubResource("VisualShaderNodeColorConstant_dj173")
nodes/fragment/26/position = Vector2(-620, -240)
nodes/fragment/27/node = SubResource("VisualShaderNodeVectorOp_3e3mw")
nodes/fragment/27/position = Vector2(-66.1198, -266.566)
nodes/fragment/connections = PackedInt32Array(8, 0, 9, 0, 7, 0, 9, 1, 9, 0, 10, 0, 11, 0, 13, 0, 12, 0, 13, 1, 9, 0, 13, 2, 3, 0, 14, 0, 15, 0, 16, 0, 14, 0, 16, 1, 18, 0, 17, 1, 17, 0, 19, 0, 19, 0, 20, 0, 13, 0, 20, 1, 16, 0, 17, 0, 3, 0, 22, 2, 21, 0, 22, 0, 22, 0, 24, 0, 24, 0, 25, 1, 26, 0, 25, 0, 25, 0, 27, 1, 27, 0, 0, 0)
